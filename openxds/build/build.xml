<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="build" name="Create Runnable Jar for Project openxds-core with libraries in sub-folder">
    <description>
    	A build file to build openxds.jar which can be run in a stand alone fashion
    </description>
	<property file="./build.properties" />
	
    <target name="init" depends="clean">
        <mkdir dir="${build.lib.dir}"/>
    	<mkdir dir="${build.licenses.dir}"/>
    	<mkdir dir="${build.sql.dir}"/>
    	<mkdir dir="${build.web.dir}"/>
    	<mkdir dir="${openxds.dist.dir}"/>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>
	
    <target name="_copy_files" depends="init">
        <copy todir="${build.lib.dir}">
            <fileset dir="${openxds.dir}/lib/">
        	    <include name="**/ant*.jar"/>
        	    <include name="**/jetty*.jar"/>
        	    <include name="**/commons-l*.jar"/>
        	    <include name="**/log4j*.jar"/>
        	    <include name="**/openexchange*.jar"/>
        	    <include name="**/jsp*.jar"/>
        	    <include name="**/servlet*.jar"/>
            </fileset>
         </copy> 	
        <copy flatten="true" todir="${build.dir}">
            <fileset dir="${openxds.dir}/common/target/classes/">
				<include name="commons-logging.properties" />
				<include name="log4j.xml" />
				<include name="jetty.properties" />
            </fileset>
        	<fileset dir="${openxds.dir}">
        		<include name="*.txt" />        		
        	</fileset>        	
         </copy>	
    	<copy todir="${build.licenses.dir}" >
    	   		<fileset dir="${openxds.dir}/src/main/resources/licences">  
    	  			<include name="**/*" />
    	   		</fileset>
    	</copy>
		<copy todir="${build.sql.dir}" >
			<fileset dir="${openxds.dir}/registry-omaradapter/target/classes/">
				<include name="*.sql" />
			</fileset>
		</copy>    	
        <copy todir="${build.web.dir}">
            <fileset dir="${openxds.dir}/web/target/openxds-web/">
				<include name="**/*" />
            	<!--exclude-->
				<exclude name="WEB-INF/lib/jsp*" />
				<exclude name="WEB-INF/lib/jetty*" />
            </fileset>
        </copy> 	
    	<!-- OpenXDS Extension-->
        <copy flatten="true" todir="${build.dir}" failonerror="false">
        	<fileset dir="${openxds.ext.dir}">
        		<include name="openxds.*" />        		
        	</fileset>        	
        </copy> 
		
		<mkdir dir="${build.lib.dir}/temp"/>
    	<unzip src="${build.web.dir}/WEB-INF/lib/openexchange-syslog-1.2-SNAPSHOT.jar" dest="${build.lib.dir}/temp">
    	    <patternset>
    	    	<include name="**/*.properties" />    
    	    	<include name="**/*.xml"/>
    	    </patternset>
  		</unzip>
 				
		<copy flatten="true" todir="${build.web.dir}/WEB-INF/classes" failonerror="false">
        	<fileset dir="${build.lib.dir}/temp">
        		<include name="logs*.properties" />    
        		<include name="logs*.xml"/>
        	</fileset>        	
		</copy>
    	<delete dir="${build.lib.dir}/temp"/>
    </target>
	
	<target name="-prepare-manifest">
        <path id="jar.class.path">
            <fileset dir="${build.lib.dir}/">
                <include name="**/*.jar"/>
            </fileset>
        </path>
        <!--Convert class path to a manifest property -->
        <manifestclasspath property="manifest.classpath.prop"
                           jarfile="${build.dir}/openxds-${project.version}.jar">
            <classpath refid="jar.class.path"/>
        </manifestclasspath>
	</target>
	
	<target name="build" depends="_copy_files, -prepare-manifest">
		<!-- Make a jar file -->
        <jar destfile="${build.dir}/${project.name}-${project.version}.jar">
            <manifest>
                <attribute name="Main-Class" value="org.openhealthtools.openxds.XdsServer"/>
                <attribute name="Class-Path" value=". ./conf ${manifest.classpath.prop}"/>
            </manifest>
            <fileset dir="${openxds.dir}/iheos/target/classes">
            	<include name="org/**" />
                <include name="gov/**" />
            </fileset>
		    <fileset dir="${openxds.dir}/api/target/classes">
            	<include name="org/**" />
            </fileset>
            <fileset dir="${openxds.dir}/common/target/classes/">
				<include name="org/**" />
				<include name="applicationContext.xml" />
            </fileset>
            <fileset dir="${openxds.dir}/core/target/classes/">
				<include name="org/**" />
            </fileset>
            <fileset dir="${openxds.dir}/registry-omaradapter/target/classes">
            	<include name="org/**" />
                <include name="ehcache.xml" />
                <include name="externalidentifier.hbm.xml" />
                <include name="jaxr-ebxml.properties" />
                <include name="omar-common.properties" />
                <include name="repository.datasource.cfg.xml" />
                <include name="repository.hbm.xml" />
            </fileset>
            <fileset dir="${openxds.dir}/registry-patientlite/target/classes">
            	<include name="org/**" />
                <include name="personidentifier.hbm.xml" />
            </fileset>	
            <fileset dir="${openxds.dir}/repository/target/classes">
            	<include name="org/**" />
                <include name="openxds.repository.hbm.xml" />
            </fileset>
            <fileset dir="${openxds.dir}/web/target/classes/">
				<include name="org/**" />
            </fileset>
        </jar>
    </target>
	
	<target name="dist" depends="build">
	<!--	<copy todir="${build.misc.dir}" >
			<fileset dir="${openxds.dir}/openxds-web/target">
				<include name="*.war" />
			</fileset>
		</copy>-->    	
		<zip destfile="${openxds.dist.dir}/${project.name}-${project.version}.zip"  update="true">
		    <zipfileset dir="${build.dir}" prefix="openxds-${project.version}"/>
		</zip>
		<tar destfile="${openxds.dist.dir}/${project.name}-${project.version}.tar.gz" compression="gzip">
    		<tarfileset dir="${build.dir}" prefix="openxds-${project.version}"/>
		</tar>	
	</target>
</project>
